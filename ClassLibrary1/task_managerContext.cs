// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ClassLibrary1
{
    public partial class task_managerContext : DbContext
    {
        public task_managerContext()
        {
        }

        public task_managerContext(DbContextOptions<task_managerContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Dosage> Dosages { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Register> Registers { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-LK2QAA8\\SQLEXPRESS;Initial Catalog=task_manager;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Dosage>(entity =>
            {
                entity.ToTable("dosage");

                entity.Property(e => e.DosageId).HasColumnName("dosage_id");

                entity.Property(e => e.AadhaarNumber)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("aadhaar_number");

                entity.Property(e => e.Age).HasColumnName("age");

                entity.Property(e => e.Dosage1Date)
                    .HasColumnType("date")
                    .HasColumnName("dosage1_date");

                entity.Property(e => e.Dosage2Date)
                    .HasColumnType("date")
                    .HasColumnName("dosage2_date");

                entity.Property(e => e.FatherName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("father_name");

                entity.Property(e => e.Gender).HasColumnName("gender");

                entity.Property(e => e.Name)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.PhoneNo)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("phone_no");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Dosages)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__dosage__user_id__49C3F6B7");
            });

            modelBuilder.Entity<Project>(entity =>
            {
                entity.ToTable("project");

                entity.Property(e => e.ProjectId).HasColumnName("project_id");

                entity.Property(e => e.ProjectDescription)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("project_description");

                entity.Property(e => e.ProjectTitle)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("project_title");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Projects)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__project__user_id__398D8EEE");
            });

            modelBuilder.Entity<Register>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__register__B9BE370FFF7790E2");

                entity.ToTable("register");

                entity.HasIndex(e => e.EmailId, "UQ__register__3FEF8767C5D35409")
                    .IsUnique();

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("email_id");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("first_name");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("last_name");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("password");
            });

            modelBuilder.Entity<Task>(entity =>
            {
                entity.ToTable("tasks");

                entity.Property(e => e.TaskId).HasColumnName("task_id");

                entity.Property(e => e.ProjectId).HasColumnName("project_id");

                entity.Property(e => e.TaskDescription)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("task_description");

                entity.Property(e => e.TaskDueDate)
                    .HasColumnType("date")
                    .HasColumnName("task_due_date");

                entity.Property(e => e.TaskName)
                    .HasMaxLength(75)
                    .IsUnicode(false)
                    .HasColumnName("task_name");

                entity.Property(e => e.TaskStatus).HasColumnName("task_status");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Project)
                    .WithMany(p => p.Tasks)
                    .HasForeignKey(d => d.ProjectId)
                    .HasConstraintName("FK__tasks__project_i__3D5E1FD2");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Tasks)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__tasks__user_id__3C69FB99");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}